{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\David\\\\Downloads\\\\home\\\\ReactNotesList-NextJs\\\\components\\\\FirstPage.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport Add from \"./Add\";\nimport TaskList from './TasksList';\n\nvar dateFormat = require(\"dateformat\");\n\nvar now = new Date();\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    toolbar: {\n      justifyContent: \"space-between\",\n      flexDirection: \"row\"\n    }\n  };\n});\nvar FirstPage = inject(\"tasksManager\")(observer(function (props) {\n  var classes = useStyles();\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  /*  useEffect(() => {\r\n     (async () => {\r\n       await props.tasksManager.getTasks();\r\n     })();\r\n   }, []); */\n\n\n  var _useState = useState({\n    task: {\n      name: \"\",\n      startDate: dateFormat(now, \"yyyy-mm-dd'T'HH:MM:ss\"),\n      lastUpdate: dateFormat(now, \"yyyy-mm-dd'T'HH:MM:ss\")\n    },\n    detail: {},\n    alerts: {},\n    open: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var handleChange = function handleChange(e, type) {\n    var name = e.target.value;\n    setState(_objectSpread({}, state, _defineProperty({}, type, _objectSpread({}, state[type], {\n      name: capitalizeFirstLetter(name)\n    }))));\n  };\n\n  var handlClickAddTask = function handlClickAddTask(type) {\n    return _regeneratorRuntime.async(function handlClickAddTask$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(props.tasksManager.addTask(state[type]));\n\n          case 2:\n            setState(_objectSpread({}, state, _defineProperty({}, type, _objectSpread({}, state[type], {\n              name: ''\n            }))));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  var handeldeleteTask = function handeldeleteTask() {\n    var response;\n    return _regeneratorRuntime.async(function handeldeleteTask$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(props.tasksManager.deleteTask(id));\n\n          case 2:\n            response = _context2.sent;\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  var handleClickOpen = function handleClickOpen() {\n    setState(_objectSpread({}, state, {\n      open: true\n    }));\n  };\n\n  var handleClickClose = function handleClickClose() {\n    setState(_objectSpread({}, state, {\n      open: false\n    }));\n  };\n\n  console.log(state);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(AppBar, {\n    position: \"static\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(Toolbar, {\n    className: classes.toolbar,\n    variant: \"dense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"To Do\"), __jsx(MenuItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    \"aria-label\": \"show 4 new mails\",\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(Badge, {\n    badgeContent: props.tasksManager.tasksSum,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(AssignmentIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Open\"))))), __jsx(Add, {\n    state: state,\n    name: 'task',\n    handleChange: handleChange,\n    handlClick: handlClickAddTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), __jsx(TaskList, {\n    handleClickClose: handleClickClose,\n    handleClickOpen: handleClickOpen,\n    state: state,\n    setState: setState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }));\n}));\nexport default FirstPage;","map":{"version":3,"sources":["C:/Users/David/Downloads/home/ReactNotesList-NextJs/components/FirstPage.js"],"names":["React","useEffect","useState","observer","inject","makeStyles","AppBar","Toolbar","Typography","IconButton","Badge","MenuItem","AssignmentIcon","Add","TaskList","dateFormat","require","now","Date","useStyles","theme","root","flexGrow","toolbar","justifyContent","flexDirection","FirstPage","props","classes","capitalizeFirstLetter","string","charAt","toUpperCase","slice","task","name","startDate","lastUpdate","detail","alerts","open","state","setState","handleChange","e","type","target","value","handlClickAddTask","tasksManager","addTask","handeldeleteTask","deleteTask","id","response","handleClickOpen","handleClickClose","console","log","tasksSum"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from \"react\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport Add from \"./Add\";\r\nimport TaskList from './TasksList'\r\nconst dateFormat = require(\"dateformat\");\r\nconst now = new Date();\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  toolbar:{\r\n     justifyContent:\"space-between\",\r\n     flexDirection:\"row\",\r\n    \r\n\r\n  },\r\n}));\r\n\r\nconst FirstPage = inject(\"tasksManager\")(\r\n  observer((props) => {\r\n\r\n  \r\n  const classes = useStyles();\r\n  function capitalizeFirstLetter(string){\r\n    return string.charAt(0).toUpperCase() + string.slice(1)\r\n  }\r\n    \r\n   /*  useEffect(() => {\r\n      (async () => {\r\n        await props.tasksManager.getTasks();\r\n      })();\r\n    }, []); */\r\n\r\n    const [state, setState] = useState({\r\n    task: {\r\n      name: \"\",\r\n      startDate: dateFormat(now, \"yyyy-mm-dd'T'HH:MM:ss\"),\r\n      lastUpdate: dateFormat(now, \"yyyy-mm-dd'T'HH:MM:ss\"),\r\n    },\r\n    detail: {},\r\n    alerts: {},\r\n    open:false\r\n  });\r\n  \r\n  const handleChange=(e,type)=>{\r\n  const name = e.target.value\r\n  setState({...state,[type]:{...state[type],name:capitalizeFirstLetter(name)}})\r\n  }\r\n\r\n  const handlClickAddTask= async(type)=>{\r\n    await props.tasksManager.addTask(state[type])\r\n    setState({...state,[type]:{...state[type],name:''}})\r\n  }\r\n  const handeldeleteTask = async () => {\r\n    const response = await props.tasksManager.deleteTask(id);\r\n  };\r\n  \r\n  const handleClickOpen = () => {\r\n    setState({...state,open:true});\r\n  };\r\n\r\n  const handleClickClose = () => {\r\n   setState({...state,open:false});\r\n  };\r\n  \r\n  console.log(state)\r\n    return (\r\n      <>\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar  className={classes.toolbar} variant=\"dense\">\r\n            <Typography   variant=\"h5\" color=\"inherit\">\r\n            To Do\r\n            </Typography>\r\n            <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={props.tasksManager.tasksSum} color=\"secondary\">\r\n            <AssignmentIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Open</p>\r\n      </MenuItem>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n      <Add state={state}  name={'task'} handleChange={handleChange} handlClick={handlClickAddTask} />\r\n      <TaskList  handleClickClose={handleClickClose}  handleClickOpen={handleClickOpen} state={state} setState={setState} />\r\n      </>\r\n    );\r\n\r\n   \r\n\r\n\r\n\r\n  })\r\n);\r\nexport default FirstPage;\r\n"]},"metadata":{},"sourceType":"module"}