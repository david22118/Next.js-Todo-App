{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\next.js Todo\\\\components\\\\FirstPage.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport AppBar from \"../components/AppBar/AppBar\"; // import Snapshot from \"../Components/SnapShot/Snapshot\";\n\nimport Taskslist from \"../Components/Tasks/Taskslist\";\nimport AddTask from '../';\nconst FirstPage = inject(\"tasksManager\")(observer(props => {\n  useEffect(() => {\n    (async () => {\n      await props.tasksManager.getTasks();\n    })();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(AppBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), __jsx(Taskslist, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n}));\nexport default FirstPage;","map":{"version":3,"sources":["C:/Users/David/Desktop/next.js Todo/components/FirstPage.js"],"names":["React","useEffect","observer","inject","AppBar","Taskslist","AddTask","FirstPage","props","tasksManager","getTasks"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,6BAAnB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,OAAP,MAAoB,KAApB;AAEA,MAAMC,SAAS,GAAGJ,MAAM,CAAC,cAAD,CAAN,CAChBD,QAAQ,CAAEM,KAAD,IAAW;AAClBP,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMO,KAAK,CAACC,YAAN,CAAmBC,QAAnB,EAAN;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,SACC,4BACG,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAGG,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,CADD;AAOD,CAdO,CADQ,CAAlB;AAkBA,eAAeH,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport AppBar from \"../components/AppBar/AppBar\";\r\n// import Snapshot from \"../Components/SnapShot/Snapshot\";\r\nimport Taskslist from \"../Components/Tasks/Taskslist\";\r\nimport AddTask from '../'\r\n\r\nconst FirstPage = inject(\"tasksManager\")(\r\n  observer((props) => {\r\n    useEffect(() => {\r\n      (async () => {\r\n        await props.tasksManager.getTasks();\r\n      })();\r\n    }, []);\r\n\r\n    return (\r\n     <>\r\n        <AppBar />\r\n        {/* <Snapshot /> */}\r\n        <Taskslist />\r\n    </>\r\n    );\r\n  })\r\n);\r\n\r\nexport default FirstPage;"]},"metadata":{},"sourceType":"module"}