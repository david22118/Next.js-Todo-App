{"ast":null,"code":"import _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _initializerDefineProperty from \"@babel/runtime-corejs2/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime-corejs2/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime-corejs2/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _temp;\n\nimport { observable, action, computed } from \"mobx\";\nimport * as helpers from \"./Helpers\";\n\nvar axios = require(\"axios\");\n\nexport var TasksManager = (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function TasksManager() {\n    _classCallCheck(this, TasksManager);\n\n    _initializerDefineProperty(this, \"tasks\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"details\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"addDetail\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"updateDetail\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"deleteDetail\", _descriptor5, this);\n  }\n\n  _createClass(TasksManager, [{\n    key: \"getTasks\",\n    value: function getTasks() {\n      var resiveData;\n      return _regeneratorRuntime.async(function getTasks$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(\"http://localhost:9000/Data\"));\n\n            case 3:\n              resiveData = _context.sent;\n              console.log(resiveData);\n              this.tasks = helpers.creatTasks(resiveData.data.tasks);\n              console.log(this.tasks);\n              this.details = helpers.creatDetails(resiveData.data.details);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", helpers.erorHandler(_context.t0));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 10]]);\n    }\n  }, {\n    key: \"addTask\",\n    value: function addTask(task) {\n      var newTask;\n      return _regeneratorRuntime.async(function addTask$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              debugger;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(axios.post(\"http://localhost:9000/Task\", task));\n\n            case 4:\n              newTask = _context2.sent;\n              this.tasks.push(helpers.creatTasks(newTask.data));\n              return _context2.abrupt(\"return\", \"The task was created successfully\");\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              return _context2.abrupt(\"return\", helpers.erorHandler(_context2.t0));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[0, 9]]);\n    }\n  }, {\n    key: \"deleteTask\",\n    value: function deleteTask(taskId) {\n      var resiveData;\n      return _regeneratorRuntime.async(function deleteTask$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(axios[\"delete\"](\"http://localhost:9000/Task/\".concat(taskId)));\n\n            case 3:\n              resiveData = _context3.sent;\n\n              if (resiveData.data.tasks.length < 0) {\n                this.tasks = [];\n              } else {\n                this.tasks = helpers.creatTasks(resiveData.data.tasks);\n              }\n\n              if (resiveData.data.detail < 0) {\n                this.details = [];\n              } else {\n                this.details = helpers.creatDetails(resiveData.data.detail);\n              }\n\n              return _context3.abrupt(\"return\", \"The task was deleted successfully\");\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              return _context3.abrupt(\"return\", helpers.erorHandler(_context3.t0));\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, [[0, 9]]);\n    }\n  }, {\n    key: \"tasksSum\",\n    get: function get() {\n      return this.tasks.length;\n    }\n  }, {\n    key: \"detailDoneSum\",\n    get: function get() {\n      var detailDoneSum = this.details.filter(function (d) {\n        return d.isDone == true;\n      });\n      return detailDoneSum.length;\n    }\n  }, {\n    key: \"detailOpenSum\",\n    get: function get() {\n      var detailOpenSum = this.details.filter(function (d) {\n        return d.isDone == false;\n      });\n      return detailOpenSum.length;\n    }\n  }]);\n\n  return TasksManager;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"tasks\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"details\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"getTasks\", [action], _Object$getOwnPropertyDescriptor(_class.prototype, \"getTasks\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addTask\", [action], _Object$getOwnPropertyDescriptor(_class.prototype, \"addTask\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"deleteTask\", [action], _Object$getOwnPropertyDescriptor(_class.prototype, \"deleteTask\"), _class.prototype), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"addDetail\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this = this;\n\n    return function _callee(detail) {\n      var newDetail;\n      return _regeneratorRuntime.async(function _callee$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(axios.post(\"http://localhost:6000/Detail\", detail));\n\n            case 3:\n              newDetail = _context4.sent;\n\n              _this.details.push(helpers.creatDetails(newDetail.data));\n\n              return _context4.abrupt(\"return\", \"The detail was created successfully\");\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](0);\n              return _context4.abrupt(\"return\", helpers.erorHandler(_context4.t0));\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    };\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"updateDetail\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return function _callee2(detailId) {\n      var resiveData, task, detail;\n      return _regeneratorRuntime.async(function _callee2$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return _regeneratorRuntime.awrap(axios.put(\"http://localhost:6000/Detail/\".concat(detailId)));\n\n            case 3:\n              resiveData = _context5.sent;\n              task = _this2.tasks.find(function (t) {\n                return t.id == resiveData.data.task._id;\n              });\n              detail = _this2.details.find(function (d) {\n                return d.id == resiveData.data.detail._id;\n              });\n              task.isDone = resiveData.data.task.lastUpdate;\n              detail.isDone = resiveData.data.detail.isDone;\n              _context5.next = 13;\n              break;\n\n            case 10:\n              _context5.prev = 10;\n              _context5.t0 = _context5[\"catch\"](0);\n              return _context5.abrupt(\"return\", helpers.erorHandler(_context5.t0));\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    };\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"deleteDetail\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this3 = this;\n\n    return function _callee3(detailId) {\n      var resiveData, detailIndex;\n      return _regeneratorRuntime.async(function _callee3$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _regeneratorRuntime.awrap(axios[\"delete\"](\"http://localhost:6000/Detail/\".concat(detailId)));\n\n            case 3:\n              resiveData = _context6.sent;\n              detailIndex = _this3.details.findIndex(function (d) {\n                return d.id == resiveData.data;\n              });\n\n              _this3.details.splice(detailIndex, 1);\n\n              _context6.next = 11;\n              break;\n\n            case 8:\n              _context6.prev = 8;\n              _context6.t0 = _context6[\"catch\"](0);\n              return _context6.abrupt(\"return\", helpers.erorHandler(_context6.t0));\n\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"tasksSum\", [computed], _Object$getOwnPropertyDescriptor(_class.prototype, \"tasksSum\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"detailDoneSum\", [computed], _Object$getOwnPropertyDescriptor(_class.prototype, \"detailDoneSum\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"detailOpenSum\", [computed], _Object$getOwnPropertyDescriptor(_class.prototype, \"detailOpenSum\"), _class.prototype)), _class);","map":{"version":3,"sources":["C:/Users/David/Downloads/home/ReactNotesList-NextJs/stores/TasksManager.js"],"names":["observable","action","computed","helpers","axios","require","TasksManager","get","resiveData","console","log","tasks","creatTasks","data","details","creatDetails","erorHandler","task","post","newTask","push","taskId","length","detail","detailDoneSum","filter","d","isDone","detailOpenSum","newDetail","detailId","put","find","t","id","_id","lastUpdate","detailIndex","findIndex","splice"],"mappings":"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","sourcesContent":["import { observable, action, computed } from \"mobx\";\r\nimport * as helpers from \"./Helpers\";\r\nconst axios = require(\"axios\");\r\n\r\nexport class TasksManager {\r\n  @observable  tasks=[];\r\n  @observable details =[];\r\n\r\n  @action async getTasks  () {\r\n    \r\n    try {\r\n\r\n      const resiveData = await axios.get(`http://localhost:9000/Data`);\r\n      console.log(resiveData)\r\n      this.tasks = helpers.creatTasks(resiveData.data.tasks);\r\n      console.log(this.tasks)\r\n      this.details = helpers.creatDetails(resiveData.data.details);\r\n    } catch (err) {\r\n      return helpers.erorHandler(err);\r\n    }\r\n  };\r\n\r\n  @action async addTask  (task)  {\r\n    \r\n    try {\r\n      debugger\r\n      const newTask = await axios.post(`http://localhost:9000/Task`, task);\r\n      this.tasks.push(helpers.creatTasks(newTask.data));\r\n      return \"The task was created successfully\";\r\n    } catch (err) {\r\n      return helpers.erorHandler(err);\r\n    }\r\n  };\r\n\r\n  @action async deleteTask  (taskId) {\r\n    \r\n    try {\r\n      const resiveData = await axios.delete(\r\n        `http://localhost:9000/Task/${taskId}`\r\n      );\r\n      if (resiveData.data.tasks.length<0) {\r\n        this.tasks = [];\r\n      } else {\r\n        this.tasks = helpers.creatTasks(resiveData.data.tasks);\r\n      }\r\n      if (resiveData.data.detail<0) {\r\n        this.details = [];\r\n      } else {\r\n        this.details = helpers.creatDetails(resiveData.data.detail);\r\n      }\r\n\r\n      return \"The task was deleted successfully\";\r\n    } catch (err) {\r\n      return helpers.erorHandler(err);\r\n    }\r\n  };\r\n\r\n  @action addDetail = async (detail) => {\r\n    \r\n    try {\r\n      const newDetail = await axios.post(`http://localhost:6000/Detail`, detail);\r\n      \r\n      this.details.push(helpers.creatDetails(newDetail.data));\r\n      return \"The detail was created successfully\";\r\n    } catch (err) {\r\n      return helpers.erorHandler(err);\r\n    }\r\n  };\r\n\r\n  @action updateDetail = async (detailId) => {\r\n    \r\n    try {\r\n      const resiveData =await  axios.put(`http://localhost:6000/Detail/${detailId}`);\r\n      const task = this.tasks.find((t) => t.id == resiveData.data.task._id);\r\n      const detail = this.details.find(\r\n        (d) => d.id == resiveData.data.detail._id\r\n      );\r\n      task.isDone = resiveData.data.task.lastUpdate;\r\n      detail.isDone = resiveData.data.detail.isDone;\r\n    } catch (err) {\r\n      return helpers.erorHandler(err);\r\n    }\r\n  };\r\n\r\n  @action deleteDetail = async (detailId) => {\r\n  \r\n    try {\r\n      const resiveData =await axios.delete(\r\n        `http://localhost:6000/Detail/${detailId}`\r\n      );\r\n      const detailIndex = this.details.findIndex(\r\n        (d) => d.id == resiveData.data\r\n      );\r\n      this.details.splice(detailIndex, 1);\r\n    } catch (err) {\r\n      return helpers.erorHandler(err);\r\n    }\r\n  };\r\n\r\n  @computed get tasksSum() {\r\n    return this.tasks.length;\r\n  }\r\n  @computed get detailDoneSum() {\r\n    const detailDoneSum = this.details.filter((d) => d.isDone == true);\r\n    return detailDoneSum.length;\r\n  }\r\n  @computed get detailOpenSum() {\r\n    const detailOpenSum = this.details.filter((d) => d.isDone == false);\r\n    return detailOpenSum.length;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}