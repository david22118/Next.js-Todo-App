{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Downloads\\\\home\\\\ReactNotesList-NextJs\\\\components\\\\TasksList.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport AddTask from \"../components/AddTask\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  toolbar: {\n    justifyContent: \"flex-end\",\n    flexDirection: \"row\"\n  }\n}));\nconst TasksList = inject(\"tasksManager\")(observer(props => {\n  const classes = useStyles();\n  useEffect(() => {\n    (async () => {\n      await props.tasksManager.getTasks();\n    })();\n  }, []);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    task: {\n      name: \"\",\n      startDate: dateFormat(now, \"yyyy-mm-dd'T'HH:MM:ss\"),\n      lastUpdate: dateFormat(now, \"yyyy-mm-dd'T'HH:MM:ss\")\n    },\n    details: {},\n    alerts: {}\n  });\n\n  const handleChange = (e, name) => {\n    console.log(e.target.value);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(AppBar, {\n    position: \"static\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(Toolbar, {\n    className: classes.toolbar,\n    variant: \"dense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(Typography, {\n    style: {\n      marginRight: '34vw'\n    },\n    variant: \"h5\",\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"To Do\"), __jsx(MenuItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    \"aria-label\": \"show 4 new mails\",\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(Badge, {\n    badgeContent: props.tasksManager.tasksSum,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(AssignmentIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Open\"))))), __jsx(AddTask, {\n    handleChange: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }));\n}));\nexport default TasksList;","map":{"version":3,"sources":["C:/Users/David/Downloads/home/ReactNotesList-NextJs/components/TasksList.js"],"names":["React","useEffect","useState","observer","inject","makeStyles","AppBar","Toolbar","Typography","IconButton","Badge","MenuItem","AssignmentIcon","AddTask","useStyles","theme","root","flexGrow","toolbar","justifyContent","flexDirection","TasksList","props","classes","tasksManager","getTasks","state","setState","task","name","startDate","dateFormat","now","lastUpdate","details","alerts","handleChange","e","console","log","target","value","marginRight","tasksSum"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from \"react\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport AddTask from \"../components/AddTask\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  toolbar:{\r\n     justifyContent:\"flex-end\",\r\n     flexDirection:\"row\",\r\n    \r\n\r\n  },\r\n}));\r\n\r\nconst TasksList = inject(\"tasksManager\")(\r\n  observer((props) => {\r\n\r\n  const classes = useStyles();\r\n\r\n    \r\n    useEffect(() => {\r\n      (async () => {\r\n        await props.tasksManager.getTasks();\r\n      })();\r\n    }, []);\r\n\r\n    const [state, setState] = useState({\r\n    task: {\r\n      name: \"\",\r\n      startDate: dateFormat(now, \"yyyy-mm-dd'T'HH:MM:ss\"),\r\n      lastUpdate: dateFormat(now, \"yyyy-mm-dd'T'HH:MM:ss\"),\r\n    },\r\n    details: {},\r\n    alerts: {},\r\n  });\r\n  \r\n  const handleChange=(e,name)=>{\r\n  console.log( e.target.value)\r\n  \r\n  }\r\n  \r\n    return (\r\n      <>\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar  className={classes.toolbar} variant=\"dense\">\r\n            <Typography style={{marginRight:'34vw'}}  variant=\"h5\" color=\"inherit\">\r\n            To Do\r\n            </Typography>\r\n            <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={props.tasksManager.tasksSum} color=\"secondary\">\r\n            <AssignmentIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Open</p>\r\n      </MenuItem>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n      <AddTask handleChange />\r\n      </>\r\n    );\r\n\r\n   \r\n\r\n\r\n\r\n  })\r\n);\r\nexport default TasksList;\r\n"]},"metadata":{},"sourceType":"module"}