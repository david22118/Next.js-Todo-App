{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\next.js Todo\\\\components\\\\TasksList.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { inject, observer } from \"mobx-react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Taskinfo from \"./Taskinfo\";\nimport QueuePlayNextIcon from \"@material-ui/icons/QueuePlayNext\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.secondary.main,\n    fontSize: 14,\n    padding: 5\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst useStyles = makeStyles({\n  table: {\n    maxWidth: 200\n  }\n});\nconst TasksList = inject(\"tasksManager\")(observer(props => {\n  const classes = useStyles();\n  const tasks = props.tasksManager.tasks;\n  return __jsx(Grid, {\n    style: {\n      marginTop: \"25px\"\n    },\n    container: true,\n    spacing: 1,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(Table, {\n    className: classes.table,\n    \"aria-label\": \"customized table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(StyledTableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Description\"), __jsx(StyledTableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Start Date\"), __jsx(StyledTableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Last Update\"), __jsx(StyledTableCell, {\n    align: \"justify\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Actions\"))), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, tasks.map(task => __jsx(Taskinfo, {\n    setState: props.setState,\n    state: props.state,\n    handleClickClose: props.handleClickClose,\n    handleClickOpen: props.handleClickOpen,\n    handeldeleteTask: props.handeldeleteTask,\n    id: task.id,\n    key: task.id,\n    name: task.name,\n    startDate: task.startDate,\n    lastUpdate: task.lastUpdate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })))))));\n}));\nexport default TasksList;","map":{"version":3,"sources":["C:/Users/David/Desktop/next.js Todo/components/TasksList.js"],"names":["React","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","inject","observer","Grid","Taskinfo","QueuePlayNextIcon","StyledTableCell","theme","head","backgroundColor","palette","primary","main","color","secondary","fontSize","padding","body","useStyles","table","maxWidth","TasksList","props","classes","tasks","tasksManager","marginTop","map","task","setState","state","handleClickClose","handleClickOpen","handeldeleteTask","id","name","startDate","lastUpdate"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Taskinfo from \"./Taskinfo\";\r\nimport QueuePlayNextIcon from \"@material-ui/icons/QueuePlayNext\";\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.secondary.main,\r\n    fontSize: 14,\r\n    padding: 5,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    maxWidth: 200,\r\n  },\r\n});\r\n\r\nconst TasksList = inject(\"tasksManager\")(\r\n  observer((props) => {\r\n    const classes = useStyles();\r\n    const tasks = props.tasksManager.tasks;\r\n    \r\n    return (\r\n      <Grid\r\n        style={{ marginTop: \"25px\" }}\r\n        container\r\n        spacing={1}\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item xs={12}>\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell align=\"left\">Description</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">Start Date</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">Last Update</StyledTableCell>\r\n                  <StyledTableCell align=\"justify\">Actions</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {tasks.map((task) => (\r\n                  <Taskinfo setState={props.setState}\r\n                   state={props.state}\r\n                   handleClickClose={props.handleClickClose}\r\n                   handleClickOpen={props.handleClickOpen}\r\n                   handeldeleteTask={props.handeldeleteTask}\r\n                    id={task.id}\r\n                    key={task.id}\r\n                    name={task.name}\r\n                    startDate={task.startDate}\r\n                    lastUpdate={task.lastUpdate}\r\n                  />\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  })\r\n);\r\nexport default TasksList;\r\n"]},"metadata":{},"sourceType":"module"}