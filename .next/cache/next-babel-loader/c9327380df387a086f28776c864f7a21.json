{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\David\\\\Downloads\\\\home\\\\ReactNotesList-NextJs\\\\components\\\\Details.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport Detail from './Detail';\nimport { inject, observer } from \"mobx-react\"; // import Add from '../Add/Add'\n// import Snackbar from \"../SnackBar/Snackbar\";\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    appBar: {\n      position: 'relative'\n    },\n    title: {\n      marginLeft: theme.spacing(2),\n      flex: 1\n    }\n  };\n});\nvar Transition = React.forwardRef(function Transition(props, ref) {\n  return __jsx(Slide, _extends({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n});\nvar Details = inject(\"tasksManager\")(observer(function (props) {\n  var classes = useStyles();\n  var handleCloseDialog = props.handleClose;\n  var openDialog = props.open;\n  var taskId = props.taskId;\n  console.log(taskId);\n  var taskName = props.taskName;\n  console.log(taskName);\n  var details = props.tasksManager.details;\n\n  var _React$useState = React.useState({\n    name: '',\n    isDone: false,\n    taskId: taskId\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    openAdd: false,\n    snakBar: false,\n    message: \"\",\n    severity: \"\"\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      open = _React$useState4[0],\n      setOpen = _React$useState4[1];\n\n  var handeleChange = function handeleChange(event, name) {\n    setState(_objectSpread({}, state, _defineProperty({}, name, event.target.value)));\n  };\n\n  var handelesave = function handelesave(state) {\n    var response;\n    return _regeneratorRuntime.async(function handelesave$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(state.name.length <= 2)) {\n              _context.next = 3;\n              break;\n            }\n\n            setOpen(_objectSpread({}, open, {\n              snakBar: true,\n              message: \"Give the Detail a name or description\",\n              severity: \"error\"\n            }));\n            return _context.abrupt(\"return\");\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(props.tasksManager.addDetail(state));\n\n          case 5:\n            response = _context.sent;\n            setOpen(_objectSpread({}, open, {\n              snakBar: true,\n              message: response,\n              severity: \"success\"\n            }));\n            setState(_objectSpread({}, state, {\n              name: ''\n            }));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(_objectSpread({}, open, {\n      openAdd: true\n    }));\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(_objectSpread({}, open, {\n      openAdd: false\n    }));\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(Dialog, {\n    fullScreen: true,\n    open: openDialog,\n    onClose: handleCloseDialog,\n    TransitionComponent: Transition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(AppBar, {\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    onClick: handleCloseDialog,\n    \"aria-label\": \"close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, taskName, \" Details\"), __jsx(Button, {\n    color: \"inherit\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Add\"))), details.filter(function (d) {\n    return d.taskId == taskId;\n  }).map(function (d) {\n    return __jsx(Detail, {\n      key: d.id,\n      name: d.name,\n      isDone: d.isDone,\n      id: d.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    });\n  })));\n}));\nexport default Details;","map":{"version":3,"sources":["C:/Users/David/Downloads/home/ReactNotesList-NextJs/components/Details.js"],"names":["React","makeStyles","Button","Dialog","AppBar","Toolbar","IconButton","Typography","CloseIcon","Slide","Detail","inject","observer","useStyles","theme","appBar","position","title","marginLeft","spacing","flex","Transition","forwardRef","props","ref","Details","classes","handleCloseDialog","handleClose","openDialog","open","taskId","console","log","taskName","details","tasksManager","useState","name","isDone","state","setState","openAdd","snakBar","message","severity","setOpen","handeleChange","event","target","value","handelesave","length","addDetail","response","handleClickOpen","filter","d","map","id"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC,C,CACA;AACA;;AACA,IAAMC,SAAS,GAAGZ,UAAU,CAAC,UAACa,KAAD;AAAA,SAAY;AACvCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAD+B;AAIvCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADP;AAELC,MAAAA,IAAI,EAAE;AAFD;AAJgC,GAAZ;AAAA,CAAD,CAA5B;AAUA,IAAMC,UAAU,GAAGrB,KAAK,CAACsB,UAAN,CAAiB,SAASD,UAAT,CAAoBE,KAApB,EAA2BC,GAA3B,EAAgC;AAClE,SAAO,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,IAAjB;AAAsB,IAAA,GAAG,EAAEA;AAA3B,KAAoCD,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFkB,CAAnB;AAIE,IAAOE,OAAO,GAACd,MAAM,CAAC,cAAD,CAAN,CACfC,QAAQ,CAAC,UAACW,KAAD,EAAU;AACnB,MAAMG,OAAO,GAAGb,SAAS,EAAzB;AACA,MAAMc,iBAAiB,GAACJ,KAAK,CAACK,WAA9B;AACA,MAAMC,UAAU,GAACN,KAAK,CAACO,IAAvB;AACA,MAAMC,MAAM,GAACR,KAAK,CAACQ,MAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,MAAMG,QAAQ,GAACX,KAAK,CAACW,QAArB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,MAAMC,OAAO,GAACZ,KAAK,CAACa,YAAN,CAAmBD,OAAjC;;AARmB,wBAUOnC,KAAK,CAACqC,QAAN,CAAe;AACvCC,IAAAA,IAAI,EAAC,EADkC;AAEvCC,IAAAA,MAAM,EAAC,KAFgC;AAGvCR,IAAAA,MAAM,EAACA;AAHgC,GAAf,CAVP;AAAA;AAAA,MAUZS,KAVY;AAAA,MAULC,QAVK;;AAAA,yBAgBKzC,KAAK,CAACqC,QAAN,CAAe;AACrCK,IAAAA,OAAO,EAAE,KAD4B;AAErCC,IAAAA,OAAO,EAAE,KAF4B;AAGrCC,IAAAA,OAAO,EAAE,EAH4B;AAIrCC,IAAAA,QAAQ,EAAE;AAJ2B,GAAf,CAhBL;AAAA;AAAA,MAgBZf,IAhBY;AAAA,MAgBNgB,OAhBM;;AAsBnB,MAAMC,aAAa,GAAC,SAAdA,aAAc,CAACC,KAAD,EAAOV,IAAP,EAAc;AAChCG,IAAAA,QAAQ,mBACHD,KADG,sBAELF,IAFK,EAEEU,KAAK,CAACC,MAAN,CAAaC,KAFf,GAAR;AAID,GALD;;AAMA,MAAMC,WAAW,GAAC,SAAZA,WAAY,CAAMX,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACZA,KAAK,CAACF,IAAN,CAAWc,MAAX,IAAqB,CADT;AAAA;AAAA;AAAA;;AAEdN,YAAAA,OAAO,mBACFhB,IADE;AAELa,cAAAA,OAAO,EAAE,IAFJ;AAGLC,cAAAA,OAAO,EAAE,uCAHJ;AAILC,cAAAA,QAAQ,EAAE;AAJL,eAAP;AAFc;;AAAA;AAAA;AAAA,6CAUOtB,KAAK,CAACa,YAAN,CAAmBiB,SAAnB,CAA6Bb,KAA7B,CAVP;;AAAA;AAUVc,YAAAA,QAVU;AAWhBR,YAAAA,OAAO,mBACFhB,IADE;AAELa,cAAAA,OAAO,EAAE,IAFJ;AAGLC,cAAAA,OAAO,EAAEU,QAHJ;AAILT,cAAAA,QAAQ,EAAE;AAJL,eAAP;AAMCJ,YAAAA,QAAQ,mBAAKD,KAAL;AAAWF,cAAAA,IAAI,EAAC;AAAhB,eAAR;;AAjBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAqBA,MAAMiB,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BT,IAAAA,OAAO,mBAAMhB,IAAN;AAAYY,MAAAA,OAAO,EAAE;AAArB,OAAP;AACD,GAFD;;AAGA,MAAMd,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBkB,IAAAA,OAAO,mBAAMhB,IAAN;AAAYY,MAAAA,OAAO,EAAE;AAArB,OAAP;AACD,GAFD;;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,UAAU,MAAlB;AAAmB,IAAA,IAAI,EAAEb,UAAzB;AAAqC,IAAA,OAAO,EAAEF,iBAA9C;AAAiE,IAAA,mBAAmB,EAAEN,UAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEK,OAAO,CAACX,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAyB,IAAA,KAAK,EAAC,SAA/B;AAAyC,IAAA,OAAO,EAAEY,iBAAlD;AAAqE,kBAAW,OAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAED,OAAO,CAACT,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGiB,QADH,aAJF,EAOE,MAAC,MAAD;AAAS,IAAA,KAAK,EAAC,SAAf;AAAyB,IAAA,OAAO,EAAEqB,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,CADF,CADF,EAeGpB,OAAO,CAACqB,MAAR,CAAe,UAAAC,CAAC;AAAA,WAAEA,CAAC,CAAC1B,MAAF,IAAUA,MAAZ;AAAA,GAAhB,EACA2B,GADA,CACI,UAAAD,CAAC;AAAA,WAAE,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,CAAC,CAACE,EAAf;AAAmB,MAAA,IAAI,EAAEF,CAAC,CAACnB,IAA3B;AAAiC,MAAA,MAAM,EAAEmB,CAAC,CAAClB,MAA3C;AAAmD,MAAA,EAAE,EAAEkB,CAAC,CAACE,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAF;AAAA,GADL,CAfH,CADF,CADF;AA0BD,CApFS,CADO,CAAf;AAsFF,eAAelC,OAAf","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Detail from './Detail'\r\nimport { inject, observer } from \"mobx-react\";\r\n// import Add from '../Add/Add'\r\n// import Snackbar from \"../SnackBar/Snackbar\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n  const  Details=inject(\"tasksManager\")(\r\n  observer((props)=> {\r\n  const classes = useStyles();\r\n  const handleCloseDialog=props.handleClose\r\n  const openDialog=props.open\r\n  const taskId=props.taskId\r\n  console.log(taskId)\r\n  const taskName=props.taskName\r\n  console.log(taskName)\r\n  const details=props.tasksManager.details\r\n  \r\n  const [state, setState] = React.useState({\r\n    name:'',\r\n    isDone:false,\r\n    taskId:taskId\r\n  });\r\n  \r\n  const [open, setOpen] = React.useState({\r\n    openAdd: false,\r\n    snakBar: false,\r\n    message: \"\",\r\n    severity: \"\",\r\n  });\r\n  const handeleChange=(event,name)=>{\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n    });\r\n  }\r\n  const handelesave=async(state)=>{\r\n    if (state.name.length <= 2) {\r\n      setOpen({\r\n        ...open,\r\n        snakBar: true,\r\n        message: \"Give the Detail a name or description\",\r\n        severity: \"error\",\r\n      })\r\n      return;\r\n    }\r\n    const response=  await props.tasksManager.addDetail(state)\r\n    setOpen({\r\n      ...open,\r\n      snakBar: true,\r\n      message: response,\r\n      severity: \"success\",\r\n    });\r\n     setState({...state,name:''})\r\n}\r\n\r\n  \r\n  const handleClickOpen = () => {\r\n    setOpen({ ...open, openAdd: true });\r\n  };\r\n  const handleClose = () => {\r\n    setOpen({ ...open, openAdd: false });\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <Dialog fullScreen open={openDialog} onClose={handleCloseDialog} TransitionComponent={Transition}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseDialog} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              {taskName} Details\r\n            </Typography>\r\n            <Button  color=\"inherit\" onClick={handleClickOpen}>\r\n              Add\r\n            </Button>\r\n            \r\n          </Toolbar>\r\n        </AppBar>\r\n        {details.filter(d=>d.taskId==taskId)\r\n        .map(d=><Detail key={d.id} name={d.name} isDone={d.isDone} id={d.id} />)}\r\n      </Dialog>\r\n     {/*  <Add open={open.openAdd} state={state}\r\n         handeleChange={handeleChange} handelesave={handelesave}\r\n         handleClose={handleClose} savedDescription={'Detail'}   /> */}\r\n         {/* <Snackbar open={open} setOpen={setOpen} /> */}\r\n    </div>\r\n  );\r\n}))\r\nexport default Details;"]},"metadata":{},"sourceType":"module"}