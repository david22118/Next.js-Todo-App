{"ast":null,"code":"import _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _initializerDefineProperty from \"@babel/runtime-corejs2/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime-corejs2/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime-corejs2/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _temp;\n\nimport { observable, action } from 'mobx';\nimport axios from 'axios';\nexport var NotesStore = (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function NotesStore() {\n    _classCallCheck(this, NotesStore);\n\n    _initializerDefineProperty(this, \"todoList\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"notesList\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"currNote\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"notesNum\", _descriptor4, this);\n  }\n\n  _createClass(NotesStore, [{\n    key: \"getNotes\",\n    value: function getNotes() {\n      var _this = this;\n\n      axios.get('http://localhost:8080/Data').then(function (response) {\n        //console.log(response);\n\n        /*  console.log('in get NOTES');\r\n         console.log(response.data); */\n        _this.notesList = response.data;\n        _this.notesNum = _this.notesList.length;\n        console.log(_this.notesNum);\n      });\n    }\n  }, {\n    key: \"addNote\",\n    value: function addNote(note) {\n      var _this2 = this;\n\n      axios.post('http://localhost:5000/notes/add', note).then(function (res) {\n        var noteToAdd = {\n          name: note.name,\n          _id: res.data._id,\n          todoList: res.data.todoList\n        };\n\n        _this2.notesList.push(noteToAdd);\n\n        _this2.notesNum = _this2.notesNum + 1; // console.log(this.notesList);\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"addTodo\",\n    value: function addTodo(noteId, todo) {\n      var _this3 = this;\n\n      console.log(todo);\n      axios.post('http://localhost:5000/notes/' + noteId + '/todoList/add', {\n        noteId: noteId,\n        todo: todo\n      }).then(function (note) {\n        console.log(note);\n\n        var changedIndex = _this3.notesList.findIndex(function (x) {\n          return x._id == note.data._id;\n        });\n\n        _this3.notesList[changedIndex] = note.data; //this.getNotes();\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"toggleCheckbox\",\n    value: function toggleCheckbox(noteId, todoId) {\n      var _this4 = this;\n\n      axios.put('http://localhost:5000/notes/' + noteId + '/todoList/' + todoId).then(function (note) {\n        var changedIndex = _this4.notesList.findIndex(function (x) {\n          return x._id == note.data._id;\n        });\n\n        _this4.notesList[changedIndex] = note.data; // this.getNotes();\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"deleteNote\",\n    value: function deleteNote(id) {\n      var _this5 = this;\n\n      axios[\"delete\"]('http://localhost:5000/notes/' + id).then(function (response) {\n        console.log(response.data);\n        _this5.notesList = _this5.notesList.filter(function (note) {\n          return note._id !== id;\n        });\n        _this5.notesNum = _this5.notesNum - 1;\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    }\n  }]);\n\n  return NotesStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"todoList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [{\n      task: 'bibi',\n      isComplete: true\n    }];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"notesList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"currNote\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"notesNum\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 0;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"getNotes\", [action], _Object$getOwnPropertyDescriptor(_class.prototype, \"getNotes\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addNote\", [action], _Object$getOwnPropertyDescriptor(_class.prototype, \"addNote\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addTodo\", [action], _Object$getOwnPropertyDescriptor(_class.prototype, \"addTodo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"toggleCheckbox\", [action], _Object$getOwnPropertyDescriptor(_class.prototype, \"toggleCheckbox\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"deleteNote\", [action], _Object$getOwnPropertyDescriptor(_class.prototype, \"deleteNote\"), _class.prototype)), _class); //export const todoStore = new TodoStore();","map":{"version":3,"sources":["C:/Users/David/Downloads/home/code/My/ReactNotesList-NextJs/stores/notesStore.tsx"],"names":["observable","action","axios","NotesStore","get","then","response","notesList","data","notesNum","length","console","log","note","post","res","noteToAdd","name","_id","todoList","push","err","noteId","todo","changedIndex","findIndex","x","todoId","put","id","filter","task","isComplete"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAkC,MAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAeA,WAAaC,UAAb;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BASc;AAAA;;AACND,MAAAA,KAAK,CAACE,GAAN,CAAU,4BAAV,EACKC,IADL,CACU,UAAAC,QAAQ,EAAI;AACd;;AACD;;AAEC,QAAA,KAAI,CAACC,SAAL,GAAiBD,QAAQ,CAACE,IAA1B;AACA,QAAA,KAAI,CAACC,QAAL,GAAgB,KAAI,CAACF,SAAL,CAAeG,MAA/B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACH,QAAjB;AACH,OARL;AASH;AAnBL;AAAA;AAAA,4BAsBYI,IAtBZ,EAsBsB;AAAA;;AACdX,MAAAA,KAAK,CAACY,IAAN,CAAW,iCAAX,EAA8CD,IAA9C,EACKR,IADL,CACU,UAAAU,GAAG,EAAI;AACT,YAAMC,SAAS,GAAG;AACdC,UAAAA,IAAI,EAAEJ,IAAI,CAACI,IADG;AAEdC,UAAAA,GAAG,EAAEH,GAAG,CAACP,IAAJ,CAASU,GAFA;AAGdC,UAAAA,QAAQ,EAAEJ,GAAG,CAACP,IAAJ,CAASW;AAHL,SAAlB;;AAKA,QAAA,MAAI,CAACZ,SAAL,CAAea,IAAf,CAAoBJ,SAApB;;AACA,QAAA,MAAI,CAACP,QAAL,GAAgB,MAAI,CAACA,QAAL,GAAgB,CAAhC,CAPS,CAQT;AACH,OAVL,WAWW,UAAAY,GAAG;AAAA,eAAIV,OAAO,CAACC,GAAR,CAAYS,GAAZ,CAAJ;AAAA,OAXd;AAYH;AAnCL;AAAA;AAAA,4BAsCYC,MAtCZ,EAsC4BC,IAtC5B,EAsCwC;AAAA;;AAChCZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACArB,MAAAA,KAAK,CAACY,IAAN,CAAW,iCAAiCQ,MAAjC,GAA0C,eAArD,EAAsE;AAACA,QAAAA,MAAM,EAANA,MAAD;AAASC,QAAAA,IAAI,EAAJA;AAAT,OAAtE,EACKlB,IADL,CACU,UAAAQ,IAAI,EAAI;AACVF,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;;AACA,YAAIW,YAAY,GAAG,MAAI,CAACjB,SAAL,CAAekB,SAAf,CAAyB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACR,GAAF,IAASL,IAAI,CAACL,IAAL,CAAUU,GAAvB;AAAA,SAA1B,CAAnB;;AACA,QAAA,MAAI,CAACX,SAAL,CAAeiB,YAAf,IAA+BX,IAAI,CAACL,IAApC,CAHU,CAIV;AACH,OANL,WAOW,UAAAa,GAAG;AAAA,eAAIV,OAAO,CAACC,GAAR,CAAYS,GAAZ,CAAJ;AAAA,OAPd;AAQH;AAhDL;AAAA;AAAA,mCAmDmBC,MAnDnB,EAmDmCK,MAnDnC,EAmDkD;AAAA;;AAC1CzB,MAAAA,KAAK,CAAC0B,GAAN,CAAU,iCAAiCN,MAAjC,GAA0C,YAA1C,GAAyDK,MAAnE,EACKtB,IADL,CACU,UAAAQ,IAAI,EAAG;AACT,YAAIW,YAAY,GAAG,MAAI,CAACjB,SAAL,CAAekB,SAAf,CAAyB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACR,GAAF,IAASL,IAAI,CAACL,IAAL,CAAUU,GAAvB;AAAA,SAA1B,CAAnB;;AACA,QAAA,MAAI,CAACX,SAAL,CAAeiB,YAAf,IAA+BX,IAAI,CAACL,IAApC,CAFS,CAGV;AACF,OALL,WAMW,UAAAa,GAAG;AAAA,eAAIV,OAAO,CAACC,GAAR,CAAYS,GAAZ,CAAJ;AAAA,OANd;AAOH;AA3DL;AAAA;AAAA,+BA8DeQ,EA9Df,EA8D0B;AAAA;;AAClB3B,MAAAA,KAAK,UAAL,CAAa,iCAA+B2B,EAA5C,EACKxB,IADL,CACU,UAAAC,QAAQ,EAAI;AACdK,QAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACE,IAArB;AACA,QAAA,MAAI,CAACD,SAAL,GAAiB,MAAI,CAACA,SAAL,CAAeuB,MAAf,CAAsB,UAAAjB,IAAI;AAAA,iBAAIA,IAAI,CAACK,GAAL,KAAaW,EAAjB;AAAA,SAA1B,CAAjB;AACA,QAAA,MAAI,CAACpB,QAAL,GAAgB,MAAI,CAACA,QAAL,GAAgB,CAAhC;AACH,OALL,WAMW,UAAAY,GAAG;AAAA,eAAIV,OAAO,CAACC,GAAR,CAAYS,GAAZ,CAAJ;AAAA,OANd;AAOH;AAtEL;;AAAA;AAAA,qFACKrB,UADL;AAAA;AAAA;AAAA;AAAA;AAAA,WACmC,CAAC;AAAC+B,MAAAA,IAAI,EAAE,MAAP;AAAeC,MAAAA,UAAU,EAAE;AAA3B,KAAD,CADnC;AAAA;AAAA,6EAEKhC,UAFL;AAAA;AAAA;AAAA;AAAA;AAAA,WAEqC,EAFrC;AAAA;AAAA,4EAGKA,UAHL;AAAA;AAAA;AAAA;AAAA;AAAA,WAGmC,EAHnC;AAAA;AAAA,4EAIKA,UAJL;AAAA;AAAA;AAAA;AAAA;AAAA,WAImC,CAJnC;AAAA;AAAA,6DAQKC,MARL,8IAqBKA,MArBL,6IAqCKA,MArCL,oJAkDKA,MAlDL,uJA6DKA,MA7DL,iG,CA0EA","sourcesContent":["import { observable, action} from 'mobx';\r\nimport axios from 'axios';\r\n\r\n\r\nexport interface Todo {\r\n    task: string\r\n    isComplete: boolean\r\n    _id?: string\r\n}\r\n\r\nexport interface Note {\r\n    name: string;\r\n    _id: any;\r\n    todoList: Todo [];\r\n}\r\n\r\nexport class NotesStore {\r\n    @observable todoList: Todo[] = [{task: 'bibi', isComplete: true}];\r\n    @observable notesList: Note [] = [];\r\n    @observable currNote: string = '';\r\n    @observable notesNum: number = 0;\r\n\r\n\r\n\r\n    @action\r\n    getNotes(){\r\n        axios.get('http://localhost:8080/Data')\r\n            .then(response => {\r\n                //console.log(response);\r\n               /*  console.log('in get NOTES');\r\n                console.log(response.data); */\r\n                this.notesList = response.data;\r\n                this.notesNum = this.notesList.length;\r\n                console.log(this.notesNum);\r\n            });\r\n    }\r\n\r\n    @action\r\n    addNote(note: any){\r\n        axios.post('http://localhost:5000/notes/add', note)\r\n            .then(res => {\r\n                const noteToAdd = {\r\n                    name: note.name,\r\n                    _id: res.data._id,\r\n                    todoList: res.data.todoList\r\n                };\r\n                this.notesList.push(noteToAdd);\r\n                this.notesNum = this.notesNum + 1;\r\n                // console.log(this.notesList);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    @action\r\n    addTodo(noteId: string, todo: Todo) {\r\n        console.log(todo);\r\n        axios.post('http://localhost:5000/notes/' + noteId + '/todoList/add', {noteId, todo})\r\n            .then(note => {\r\n                console.log(note);\r\n                let changedIndex = this.notesList.findIndex(x => x._id == note.data._id);\r\n                this.notesList[changedIndex] = note.data;\r\n                //this.getNotes();\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    @action\r\n    toggleCheckbox(noteId: string, todoId: string){\r\n        axios.put('http://localhost:5000/notes/' + noteId + '/todoList/' + todoId)\r\n            .then(note =>{\r\n                let changedIndex = this.notesList.findIndex(x => x._id == note.data._id);\r\n                this.notesList[changedIndex] = note.data;\r\n               // this.getNotes();\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    @action\r\n    deleteNote(id: string){\r\n        axios.delete('http://localhost:5000/notes/'+id)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                this.notesList = this.notesList.filter(note => note._id !== id);\r\n                this.notesNum = this.notesNum - 1;\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n}\r\n\r\n//export const todoStore = new TodoStore();\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}