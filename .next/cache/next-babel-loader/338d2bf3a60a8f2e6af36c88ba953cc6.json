{"ast":null,"code":"import _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _initializerDefineProperty from \"@babel/runtime-corejs2/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime-corejs2/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime-corejs2/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _temp;\n\nimport { observable, action, computed } from \"mobx\";\nimport * as helpers from \"./Helpers\";\n\nconst axios = require(\"axios\");\n\nexport let TasksManager = (_class = (_temp = class TasksManager {\n  constructor() {\n    _initializerDefineProperty(this, \"tasks\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"details\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"getTasks\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"addTask\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"deleteTask\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"addDetail\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"updateDetail\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"deleteDetail\", _descriptor8, this);\n  }\n\n  get tasksSum() {\n    return this.tasks.length;\n  }\n\n  get detailDoneSum() {\n    const detailDoneSum = this.details.filter(d => d.isDone == true);\n    return detailDoneSum.length;\n  }\n\n  get detailOpenSum() {\n    const detailOpenSum = this.details.filter(d => d.isDone == false);\n    return detailOpenSum.length;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"tasks\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"details\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"getTasks\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      try {\n        const resiveData = await axios.get(`http://localhost:6000/Data`);\n        console.log('ddd');\n        this.tasks = helpers.creatTasks(resiveData.data.tasks);\n        this.details = helpers.creatDetails(resiveData.data.details);\n      } catch (err) {\n        return helpers.erorHandler(err);\n      }\n    };\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"addTask\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async task => {\n      try {\n        const newTask = await axios.post(`http://localhost:6000/Task`, task);\n        this.tasks.push(helpers.creatTasks(newTask.data));\n        return \"The task was created successfully\";\n      } catch (err) {\n        return helpers.erorHandler(err);\n      }\n    };\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"deleteTask\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async taskId => {\n      try {\n        const resiveData = await axios.delete(`http://localhost:6000/Task/${taskId}`);\n\n        if (resiveData.data.tasks.length < 0) {\n          this.tasks = [];\n        } else {\n          this.tasks = helpers.creatTasks(resiveData.data.tasks);\n        }\n\n        if (resiveData.data.detail < 0) {\n          this.details = [];\n        } else {\n          this.details = helpers.creatDetails(resiveData.data.detail);\n        }\n\n        return \"The task was deleted successfully\";\n      } catch (err) {\n        return helpers.erorHandler(err);\n      }\n    };\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"addDetail\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async detail => {\n      try {\n        const newDetail = await axios.post(`http://localhost:6000/Detail`, detail);\n        this.details.push(helpers.creatDetails(newDetail.data));\n        return \"The detail was created successfully\";\n      } catch (err) {\n        return helpers.erorHandler(err);\n      }\n    };\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"updateDetail\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async detailId => {\n      try {\n        const resiveData = await axios.put(`http://localhost:6000/Detail/${detailId}`);\n        const task = this.tasks.find(t => t.id == resiveData.data.task._id);\n        const detail = this.details.find(d => d.id == resiveData.data.detail._id);\n        task.isDone = resiveData.data.task.lastUpdate;\n        detail.isDone = resiveData.data.detail.isDone;\n      } catch (err) {\n        return helpers.erorHandler(err);\n      }\n    };\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"deleteDetail\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async detailId => {\n      try {\n        const resiveData = await axios.delete(`http://localhost:6000/Detail/${detailId}`);\n        const detailIndex = this.details.findIndex(d => d.id == resiveData.data);\n        this.details.splice(detailIndex, 1);\n      } catch (err) {\n        return helpers.erorHandler(err);\n      }\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"tasksSum\", [computed], _Object$getOwnPropertyDescriptor(_class.prototype, \"tasksSum\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"detailDoneSum\", [computed], _Object$getOwnPropertyDescriptor(_class.prototype, \"detailDoneSum\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"detailOpenSum\", [computed], _Object$getOwnPropertyDescriptor(_class.prototype, \"detailOpenSum\"), _class.prototype)), _class);","map":{"version":3,"sources":["C:/Users/David/Downloads/home/ReactNotesList-NextJs/stores/TasksManager.js"],"names":["observable","action","computed","helpers","axios","require","TasksManager","tasksSum","tasks","length","detailDoneSum","details","filter","d","isDone","detailOpenSum","resiveData","get","console","log","creatTasks","data","creatDetails","err","erorHandler","task","newTask","post","push","taskId","delete","detail","newDetail","detailId","put","find","t","id","_id","lastUpdate","detailIndex","findIndex","splice"],"mappings":"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","sourcesContent":["import { observable, action, computed } from \"mobx\";\r\nimport * as helpers from \"./Helpers\";\r\nconst axios = require(\"axios\");\r\n\r\nexport class TasksManager {\r\n  @observable tasks = [];\r\n  @observable details = [];\r\n\r\n  @action getTasks = async () => {\r\n    \r\n    try {\r\n      const resiveData = await axios.get(`http://localhost:6000/Data`);\r\n      console.log('ddd')\r\n      this.tasks = helpers.creatTasks(resiveData.data.tasks);\r\n      this.details = helpers.creatDetails(resiveData.data.details);\r\n    } catch (err) {\r\n      return helpers.erorHandler(err);\r\n    }\r\n  };\r\n\r\n  @action addTask = async (task) => {\r\n    try {\r\n      const newTask = await axios.post(`http://localhost:6000/Task`, task);\r\n      this.tasks.push(helpers.creatTasks(newTask.data));\r\n      return \"The task was created successfully\";\r\n    } catch (err) {\r\n      return helpers.erorHandler(err);\r\n    }\r\n  };\r\n\r\n  @action deleteTask = async (taskId) => {\r\n    \r\n    try {\r\n      const resiveData = await axios.delete(\r\n        `http://localhost:6000/Task/${taskId}`\r\n      );\r\n      if (resiveData.data.tasks.length<0) {\r\n        this.tasks = [];\r\n      } else {\r\n        this.tasks = helpers.creatTasks(resiveData.data.tasks);\r\n      }\r\n      if (resiveData.data.detail<0) {\r\n        this.details = [];\r\n      } else {\r\n        this.details = helpers.creatDetails(resiveData.data.detail);\r\n      }\r\n\r\n      return \"The task was deleted successfully\";\r\n    } catch (err) {\r\n      return helpers.erorHandler(err);\r\n    }\r\n  };\r\n\r\n  @action addDetail = async (detail) => {\r\n    \r\n    try {\r\n      const newDetail = await axios.post(`http://localhost:6000/Detail`, detail);\r\n      \r\n      this.details.push(helpers.creatDetails(newDetail.data));\r\n      return \"The detail was created successfully\";\r\n    } catch (err) {\r\n      return helpers.erorHandler(err);\r\n    }\r\n  };\r\n\r\n  @action updateDetail = async (detailId) => {\r\n    \r\n    try {\r\n      const resiveData =await  axios.put(`http://localhost:6000/Detail/${detailId}`);\r\n      const task = this.tasks.find((t) => t.id == resiveData.data.task._id);\r\n      const detail = this.details.find(\r\n        (d) => d.id == resiveData.data.detail._id\r\n      );\r\n      task.isDone = resiveData.data.task.lastUpdate;\r\n      detail.isDone = resiveData.data.detail.isDone;\r\n    } catch (err) {\r\n      return helpers.erorHandler(err);\r\n    }\r\n  };\r\n\r\n  @action deleteDetail = async (detailId) => {\r\n  \r\n    try {\r\n      const resiveData =await axios.delete(\r\n        `http://localhost:6000/Detail/${detailId}`\r\n      );\r\n      const detailIndex = this.details.findIndex(\r\n        (d) => d.id == resiveData.data\r\n      );\r\n      this.details.splice(detailIndex, 1);\r\n    } catch (err) {\r\n      return helpers.erorHandler(err);\r\n    }\r\n  };\r\n\r\n  @computed get tasksSum() {\r\n    return this.tasks.length;\r\n  }\r\n  @computed get detailDoneSum() {\r\n    const detailDoneSum = this.details.filter((d) => d.isDone == true);\r\n    return detailDoneSum.length;\r\n  }\r\n  @computed get detailOpenSum() {\r\n    const detailOpenSum = this.details.filter((d) => d.isDone == false);\r\n    return detailOpenSum.length;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}