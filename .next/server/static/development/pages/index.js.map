{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///webpack/bootstrap","webpack:///./Components/Add/Add.jsx","webpack:///./Components/Details/Detail.jsx","webpack:///./Components/Details/Details.jsx","webpack:///./Components/SnackBar/Snackbar.jsx","webpack:///./Components/SnapShot/Snapshot.jsx","webpack:///./Components/SnapShot/SnapshotSum.jsx","webpack:///./Components/Tasks/Taskinfo.jsx","webpack:///./Components/Tasks/Taskslist.jsx","webpack:///./components/AppBar/AppBar.jsx","webpack:///./components/FirstPage.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/assign.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-properties.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptors.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js","webpack:///./pages/index.js","webpack:///external \"@material-ui/core/AppBar\"","webpack:///external \"@material-ui/core/Avatar\"","webpack:///external \"@material-ui/core/Button\"","webpack:///external \"@material-ui/core/Checkbox\"","webpack:///external \"@material-ui/core/Dialog\"","webpack:///external \"@material-ui/core/DialogActions\"","webpack:///external \"@material-ui/core/DialogContent\"","webpack:///external \"@material-ui/core/DialogContentText\"","webpack:///external \"@material-ui/core/DialogTitle\"","webpack:///external \"@material-ui/core/Divider\"","webpack:///external \"@material-ui/core/Grid\"","webpack:///external \"@material-ui/core/IconButton\"","webpack:///external \"@material-ui/core/List\"","webpack:///external \"@material-ui/core/ListItem\"","webpack:///external \"@material-ui/core/ListItemAvatar\"","webpack:///external \"@material-ui/core/ListItemText\"","webpack:///external \"@material-ui/core/Paper\"","webpack:///external \"@material-ui/core/Slide\"","webpack:///external \"@material-ui/core/Snackbar\"","webpack:///external \"@material-ui/core/Table\"","webpack:///external \"@material-ui/core/TableBody\"","webpack:///external \"@material-ui/core/TableCell\"","webpack:///external \"@material-ui/core/TableContainer\"","webpack:///external \"@material-ui/core/TableHead\"","webpack:///external \"@material-ui/core/TableRow\"","webpack:///external \"@material-ui/core/TextField\"","webpack:///external \"@material-ui/core/Toolbar\"","webpack:///external \"@material-ui/core/Typography\"","webpack:///external \"@material-ui/core/styles\"","webpack:///external \"@material-ui/icons/Assignment\"","webpack:///external \"@material-ui/icons/AssignmentLate\"","webpack:///external \"@material-ui/icons/AssignmentTurnedIn\"","webpack:///external \"@material-ui/icons/Close\"","webpack:///external \"@material-ui/icons/Delete\"","webpack:///external \"@material-ui/icons/PlaylistPlay\"","webpack:///external \"@material-ui/icons/QueuePlayNext\"","webpack:///external \"@material-ui/lab/Alert\"","webpack:///external \"core-js/library/fn/object/assign\"","webpack:///external \"core-js/library/fn/object/define-properties\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptor\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptors\"","webpack:///external \"core-js/library/fn/object/get-own-property-symbols\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"dateformat\"","webpack:///external \"mobx-react\"","webpack:///external \"next/head\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { inject, observer } from \"mobx-react\";\r\n\r\n\r\nconst Add=inject(\"tasksManager\")(\r\n  observer((props)=> {\r\n  const state = props.state\r\n  const open = props.open\r\n  const handleClose= props.handleClose\r\n  const handeleChange=props.handeleChange\r\n  const handelesave=props.handelesave\r\n  const savedDescription=props.savedDescription\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Add {savedDescription}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n          Please provide a description for a new {savedDescription}\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label= {`${savedDescription} description `}\r\n            type=\"email\"\r\n            fullWidth\r\n            value={state.name}\r\n            onChange={(e)=>handeleChange(e,'name')}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            close\r\n          </Button>\r\n          <Button onClick={()=>handelesave(state)} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}))\r\n\r\nexport default Add\r\n","import React from \"react\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nconst Detail =inject(\"tasksManager\")(\r\n  observer((props)=> {\r\n\r\n  const handelDelete= async()=>{\r\n  const response=await props.tasksManager.deleteDetail(props.id);\r\n  \r\n}\r\n  \r\n  const handlechecked = async () => {\r\n    const response=await props.tasksManager.updateDetail(props.id);\r\n};\r\n   \r\n  return (\r\n    <>\r\n      <List>\r\n        <ListItem>\r\n          <ListItemText primary={props.name} />\r\n          <Checkbox\r\n            checked={props.isDone}\r\n            onChange={handlechecked}\r\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n          />\r\n          <DeleteIcon onClick={handelDelete} cursor=\"pointer\" />\r\n        </ListItem>\r\n        <Divider />\r\n      </List>\r\n    </>\r\n  );\r\n}));\r\nexport default Detail;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Detail from './Detail'\r\nimport { inject, observer } from \"mobx-react\";\r\nimport Add from '../Add/Add'\r\nimport Snackbar from \"../SnackBar/Snackbar\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n  const  Details=inject(\"tasksManager\")(\r\n    observer((props)=> {\r\n  const classes = useStyles();\r\n  const handleCloseDialog=props.handleClose\r\n  const openDialog=props.open\r\n  const taskId=props.taskId\r\n  const taskName=props.taskName\r\n  const details=props.tasksManager.details\r\n  \r\n  const [state, setState] = React.useState({\r\n    name:'',\r\n    isDone:false,\r\n    taskId:taskId\r\n  });\r\n  const [open, setOpen] = React.useState({\r\n    openAdd: false,\r\n    snakBar: false,\r\n    message: \"\",\r\n    severity: \"\",\r\n  });\r\n  const handeleChange=(event,name)=>{\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n    });\r\n  }\r\n  const handelesave=async(state)=>{\r\n    if (state.name.length <= 2) {\r\n      setOpen({\r\n        ...open,\r\n        snakBar: true,\r\n        message: \"Give the Detail a name or description\",\r\n        severity: \"error\",\r\n      })\r\n      return;\r\n    }\r\n    const response=  await props.tasksManager.addDetail(state)\r\n    setOpen({\r\n      ...open,\r\n      snakBar: true,\r\n      message: response,\r\n      severity: \"success\",\r\n    });\r\n     setState({...state,name:''})\r\n}\r\n\r\n  \r\n  const handleClickOpen = () => {\r\n    setOpen({ ...open, openAdd: true });\r\n  };\r\n  const handleClose = () => {\r\n    setOpen({ ...open, openAdd: false });\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <Dialog fullScreen open={openDialog} onClose={handleCloseDialog} TransitionComponent={Transition}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseDialog} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              {taskName} Details\r\n            </Typography>\r\n            <Button  color=\"inherit\" onClick={handleClickOpen}>\r\n              Add\r\n            </Button>\r\n            \r\n          </Toolbar>\r\n        </AppBar>\r\n        {details.filter(d=>d.taskId==taskId)\r\n        .map(d=><Detail key={d.id} name={d.name} isDone={d.isDone} id={d.id} />)}\r\n      </Dialog>\r\n      <Add  open={open.openAdd} state={state}\r\n         handeleChange={handeleChange} handelesave={handelesave}\r\n         handleClose={handleClose} savedDescription={'Detail'}   />\r\n         <Snackbar open={open} setOpen={setOpen} />\r\n    </div>\r\n  );\r\n}))\r\nexport default Details;","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars(props) {\r\n  const classes = useStyles();\r\n  const open=props.open\r\n  const setOpen=props.setOpen\r\n \r\n\r\n\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n   \r\n    setOpen({...open,snakBar:false});\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open.snakBar} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={open.severity}>\r\n          {open.message}\r\n        </Alert>\r\n      </Snackbar>\r\n     {/*  <Alert severity=\"error\">This is an error message!</Alert>\r\n      <Alert severity=\"warning\">This is a warning message!</Alert>\r\n      <Alert severity=\"info\">This is an information message!</Alert>\r\n      <Alert severity=\"success\">This is a success message!</Alert> */}\r\n    </div>\r\n  );\r\n}","import AssignmentLateIcon from '@material-ui/icons/AssignmentLate';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { inject,observer } from 'mobx-react';\r\nimport React,{ useEffect } from 'react';\r\nimport SnapshotSum from './SnapshotSum'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginTop:theme.spacing(2)\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(0),\r\n    \r\n      color: theme.palette.text.secondary,\r\n    },\r\n  icon:{\r\n    color: theme.palette.primary.main,\r\n    backgroundColor:theme.palette.secondary.main,\r\n  },\r\n  avatar:{\r\n    backgroundColor:theme.palette.primary.main,\r\n  },\r\n  secondary:{\r\n  color:theme.palette.secondary.main,\r\n  \r\n  },\r\n  primary:{\r\n    color:theme.palette.primary.main\r\n  },\r\n  grid:{\r\n   flexBasis:0\r\n  },\r\n  table:{\r\n    marginTop:'15px'\r\n  }\r\n  \r\n  }));\r\n  \r\n    const Snapshot = inject('tasksManager')(observer((props)=>{\r\n    const classes=useStyles()\r\n    const assignmentTurnedInIcon = <AssignmentTurnedInIcon className={classes.icon} />\r\n    const assignmentIcon= <AssignmentIcon className={classes.icon} />\r\n    const assignmentLateIcon=<AssignmentLateIcon className={classes.icon} />\r\n    return (\r\n      \r\n      <div className={classes.root}>\r\n        <Grid container spacing={1}\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"> \r\n          <Grid className={classes.grid}  item xs={6}>\r\n            <Paper className={classes.paper}>\r\n            <SnapshotSum title={'Tasks open'} amount={props.tasksManager.tasksSum}  icon={assignmentIcon}\r\n       avatar={classes.avatar} secondary={classes.secondary} primary={classes.primary}/>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid className={classes.grid}  item xs={6}>\r\n            <Paper className={classes.paper}>\r\n            <SnapshotSum title={'Details Made'} amount={props.tasksManager.detailDoneSum} icon={assignmentTurnedInIcon} \r\n      avatar={classes.avatar} secondary={classes.secondary}  primary={classes.primary}/>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item className={classes.grid}  xs={12}>\r\n            <Paper className={classes.paper}>\r\n            <SnapshotSum  title={'Details to do'} amount={props.tasksManager.detailOpenSum} icon={assignmentLateIcon}\r\n       avatar={classes.avatar}  secondary={classes.secondary} primary={classes.primary} />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n        \r\n       \r\n \r\n   \r\n    \r\n    );\r\n  }))\r\n  \r\n  export default Snapshot","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n\r\n\r\n\r\nexport default function SnapshotSum(props) {\r\n  const title= props.title\r\n  const amount = props.amount\r\n  const icon= props.icon\r\n  const secondary=props.secondary\r\n  const primary = props.primary\r\n  return (\r\n    \r\n      <ListItem >\r\n        <ListItemAvatar>\r\n          <Avatar className={props.avatar}>\r\n            {icon}\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText  classes={{ secondary: secondary,primary:primary }}\r\n         primary={title} secondary={amount} />\r\n      </ListItem>\r\n  \r\n  );\r\n}","  import React from \"react\";\r\n  import { withStyles } from \"@material-ui/core/styles\";\r\n  import TableCell from \"@material-ui/core/TableCell\";\r\n  import TableRow from \"@material-ui/core/TableRow\";\r\n  import { inject, observer } from \"mobx-react\";\r\n  import DeleteIcon from \"@material-ui/icons/Delete\";\r\n  import PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\n  import Details from \"../Details/Details\";\r\n\r\n  const dateFormat = require(\"dateformat\");\r\n  const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: theme.palette.secondary.main,\r\n      fontSize: 16,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n\r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      \"&:nth-of-type(odd)\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\n  const TasksInfo = inject(\"tasksManager\")(\r\n    observer((props) => {\r\n      const name = props.name;\r\n      const startDate = props.startDate;\r\n      const lastUpdate = props.lastUpdate;\r\n      const id = props.id;\r\n      const [open, setOpen] = React.useState(false);\r\n\r\n      const handleClickOpen = () => {\r\n        setOpen(true);\r\n      };\r\n\r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n\r\n      const handeldeleteTask = async () => {\r\n        const response = await props.tasksManager.deleteTask(id);\r\n        \r\n      };\r\n\r\n      return (\r\n        <>\r\n          <StyledTableRow>\r\n            <StyledTableCell component=\"th\" scope=\"row\">\r\n              {name}\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"right\">\r\n              {dateFormat(startDate, \"dd/mm/yyyy\")}\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"right\">\r\n              {dateFormat(lastUpdate, \"dd/mm/yyyy\")}\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"left\">\r\n              <DeleteIcon onClick={handeldeleteTask} cursor=\"pointer\" />\r\n              <PlaylistPlayIcon cursor=\"pointer\" onClick={handleClickOpen} />\r\n            </StyledTableCell>\r\n          </StyledTableRow>\r\n          <Details  open={open} handleClose={handleClose} taskId={id} taskName={name} />\r\n        </>\r\n      );\r\n    })\r\n  );\r\n  export default TasksInfo;\r\n","import React from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Taskinfo from \"./Taskinfo\";\r\nimport QueuePlayNextIcon from \"@material-ui/icons/QueuePlayNext\";\r\nimport Add from \"../Add/Add\";\r\nimport Snackbar from \"../SnackBar/Snackbar\";\r\nconst dateFormat = require(\"dateformat\");\r\nconst now = new Date();\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.secondary.main,\r\n    fontSize: 14,\r\n    padding: 5,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    maxWidth: 200,\r\n  },\r\n});\r\n\r\nconst TasksList = inject(\"tasksManager\")(\r\n  observer((props) => {\r\n    const classes = useStyles();\r\n    const tasks = props.tasksManager.tasks;\r\n\r\n    const [state, setState] = React.useState({\r\n      name: \"\",\r\n      startDate: dateFormat(now, \"yyyy-mm-dd'T'HH:MM:ss\"),\r\n      lastUpdate: dateFormat(now, \"yyyy-mm-dd'T'HH:MM:ss\"),\r\n    });\r\n    const [open, setOpen] = React.useState({\r\n      openAdd: false,\r\n      snakBar: false,\r\n      message: \"\",\r\n      severity: \"\",\r\n    });\r\n    const handeleChange = (event, name) => {\r\n      setState({\r\n        ...state,\r\n        [name]: event.target.value,\r\n      });\r\n    };\r\n    const handelesave = async (state) => {\r\n      if (props.tasksManager.tasksSum == 10) {\r\n        setOpen({\r\n          ...open,\r\n          snakBar: true,\r\n          message: \"The amount of tasks is limited to 10!\",\r\n          severity: \"error\",\r\n        });\r\n        return;\r\n      }\r\n      if (state.name.length <= 2) {\r\n        setOpen({\r\n          ...open,\r\n          snakBar: true,\r\n          message: \"Give the Task a name or description\",\r\n          severity: \"error\",\r\n        })\r\n        return;\r\n      }\r\n      const response = await props.tasksManager.addTask(state);\r\n      setOpen({\r\n        ...open,\r\n        snakBar: true,\r\n        message: response,\r\n        severity: \"success\",\r\n      });\r\n\r\n      setState({ ...state, name: \"\" });\r\n    };\r\n\r\n   \r\n    const handleClickOpen = () => {\r\n      setOpen({ ...open, openAdd: true });\r\n    };\r\n    const handleClose = () => {\r\n      setOpen({ ...open, openAdd: false });\r\n    };\r\n\r\n    return (\r\n      <Grid\r\n        style={{ marginTop: \"25px\" }}\r\n        container\r\n        spacing={1}\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item xs={12}>\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n              <TableHead>\r\n                <QueuePlayNextIcon onClick={handleClickOpen} cursor=\"pointer\" />\r\n                <TableRow>\r\n                  <StyledTableCell align=\"left\">Description</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">Start Date</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">Last Update</StyledTableCell>\r\n                  <StyledTableCell align=\"justify\">Actions</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {tasks.map((task) => (\r\n                  <Taskinfo\r\n                    id={task.id}\r\n                    key={task.id}\r\n                    name={task.name}\r\n                    startDate={task.startDate}\r\n                    lastUpdate={task.lastUpdate}\r\n                  />\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n        <Add\r\n          open={open.openAdd}\r\n          state={state}\r\n          handeleChange={handeleChange}\r\n          handelesave={handelesave}\r\n          handleClose={handleClose}\r\n          savedDescription={\"Task\"}\r\n        />\r\n        <Snackbar open={open} setOpen={setOpen} />\r\n      </Grid>\r\n    );\r\n  })\r\n);\r\nexport default TasksList;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  toolbar:{\r\n     justifyContent:'center',\r\n  },\r\n}));\r\n\r\nexport default function DenseAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.toolbar} variant=\"dense\">\r\n          <Typography  variant=\"h6\" color=\"inherit\">\r\n            Tasks Manager\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n\r\n    </div>\r\n  );\r\n}","import React, { useEffect } from \"react\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport AppBar from \"../components/AppBar/AppBar\";\r\nimport Snapshot from \"../Components/SnapShot/Snapshot\";\r\nimport Taskslist from \"../Components/Tasks/Taskslist\";\r\n\r\n\r\nconst FirstPage = inject(\"tasksManager\")(\r\n  observer((props) => {\r\n    useEffect(() => {\r\n      (async () => {\r\n        await props.tasksManager.getTasks();\r\n      })();\r\n    }, []);\r\n\r\n    return (\r\n     <>\r\n        <AppBar />\r\n        <Snapshot />\r\n        <Taskslist />\r\n    </>\r\n    );\r\n  })\r\n);\r\n\r\nexport default FirstPage;","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptors\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _Object$assign from \"../../core-js/object/assign\";\nexport default function _extends() {\n  _extends = _Object$assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import Head from \"next/head\";\r\nimport React from \"react\";\r\nimport FirstPage from \"../components/FirstPage\";\r\n\r\nimport { observer, inject } from \"mobx-react\";\r\n\r\n@inject('tasksManager')\r\n@observer\r\n\r\nexport default class Home extends React.Component {\r\n\r\n \r\n  render() {\r\n    return (\r\n      <>\r\n        <Head>\r\n          <title>Home</title>\r\n          <link\r\n            href=\"https://fonts.googleapis.com/css2?family=Ubuntu:wght@300&display=swap\"\r\n            rel=\"stylesheet\"\r\n          ></link>\r\n          <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\r\n          <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\r\n        </Head>\r\n        <FirstPage />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","module.exports = require(\"@material-ui/core/AppBar\");","module.exports = require(\"@material-ui/core/Avatar\");","module.exports = require(\"@material-ui/core/Button\");","module.exports = require(\"@material-ui/core/Checkbox\");","module.exports = require(\"@material-ui/core/Dialog\");","module.exports = require(\"@material-ui/core/DialogActions\");","module.exports = require(\"@material-ui/core/DialogContent\");","module.exports = require(\"@material-ui/core/DialogContentText\");","module.exports = require(\"@material-ui/core/DialogTitle\");","module.exports = require(\"@material-ui/core/Divider\");","module.exports = require(\"@material-ui/core/Grid\");","module.exports = require(\"@material-ui/core/IconButton\");","module.exports = require(\"@material-ui/core/List\");","module.exports = require(\"@material-ui/core/ListItem\");","module.exports = require(\"@material-ui/core/ListItemAvatar\");","module.exports = require(\"@material-ui/core/ListItemText\");","module.exports = require(\"@material-ui/core/Paper\");","module.exports = require(\"@material-ui/core/Slide\");","module.exports = require(\"@material-ui/core/Snackbar\");","module.exports = require(\"@material-ui/core/Table\");","module.exports = require(\"@material-ui/core/TableBody\");","module.exports = require(\"@material-ui/core/TableCell\");","module.exports = require(\"@material-ui/core/TableContainer\");","module.exports = require(\"@material-ui/core/TableHead\");","module.exports = require(\"@material-ui/core/TableRow\");","module.exports = require(\"@material-ui/core/TextField\");","module.exports = require(\"@material-ui/core/Toolbar\");","module.exports = require(\"@material-ui/core/Typography\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"@material-ui/icons/Assignment\");","module.exports = require(\"@material-ui/icons/AssignmentLate\");","module.exports = require(\"@material-ui/icons/AssignmentTurnedIn\");","module.exports = require(\"@material-ui/icons/Close\");","module.exports = require(\"@material-ui/icons/Delete\");","module.exports = require(\"@material-ui/icons/PlaylistPlay\");","module.exports = require(\"@material-ui/icons/QueuePlayNext\");","module.exports = require(\"@material-ui/lab/Alert\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptors\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"dateformat\");","module.exports = require(\"mobx-react\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK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AAAA;AAAA;AAGA;AAGA;;;;;;;;;;;ACzBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AAEA;AAKA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAnsourceRoot":""}